{
  "name": "Security Philosophy Apprentice",
  "description": "Thinks deeply about security properties and tradeoffs",
  "tools": {
    "allowed": [
      "WebSearch",
      "Write",
      "TodoWrite"
    ],
    "forbidden": [
      "Task",
      "Bash",
      "database_access"
    ],
    "rationale": "Can research and document, but cannot implement or delegate further"
  },
  "provided_context": {
    "threat_model": "Third-party database provider compromise - attacker gets full dump",
    "current_issue": "Mallku uses uuid5(semantic_name) which generates same UUID across all instances",
    "security_principle": "Instance isolation - compromising one Mallku should not help attack another",
    "anti_patterns": [
      "Security theater - complexity without protection",
      "Deterministic 'randomness' that isn't random",
      "Encryption with keys stored alongside data"
    ]
  },
  "questions_to_explore": [
    "What properties must UUID generation have for true instance isolation?",
    "How do we balance security with debugging/migration needs?",
    "What attack vectors exist beyond database dumps?",
    "Is UUID mapping the right approach, or is there something better?"
  ],
  "freedom_to": {
    "challenge": "Question whether UUIDs are needed at all",
    "propose": "Suggest alternative isolation mechanisms",
    "warn": "Identify security theater in proposed solutions",
    "imagine": "Think of attacks we haven't considered"
  },
  "deliverable": {
    "format": "Security philosophy document",
    "should_include": [
      "Core security properties required",
      "Tradeoffs analysis",
      "Attack scenarios to defend against",
      "Recommendations (even if they challenge premises)"
    ],
    "example_insight": "Maybe semantic isolation is less important than query pattern obfuscation"
  }
}
